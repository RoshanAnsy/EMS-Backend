// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ActionTypes {
  LOGIN
  LOGOUT
}

enum Role {
  USER
  ADMIN
}

enum Categories {
  RESULT
  JOB
  ADMITCARD
  ANSWERKEY
  ADMISSION
  SYLLABUS
  CERTIFICATE
}
model User {
  id        Int       @id @unique @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  avatar    String?
  role       Role       @default(USER)
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  logs      Log[]
  article   Article[]
}

model Log {
  id        Int         @id @default(autoincrement())
  userId    Int
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  action    ActionTypes // "LOGIN" or "LOGOUT"
  timestamp DateTime    @default(now())
}

model Article {
  id          String        @id @default(uuid())
  title       String        @unique @db.Text // Searchable field
  thumbnail   String?        @db.Text
  tags        String[]      @db.Text
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt
  userId      Int
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  viewContent String  @db.Text
  categories Categories
}

// model ArticleView {
//   id          String  @id @default(uuid())
//   articleId   String  @unique
//   article     Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
//   viewContent String  @db.Text
// }


